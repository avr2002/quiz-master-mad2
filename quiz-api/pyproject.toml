[project]
name = "quiz-api"
authors = [
    { name = "Amit Vikram Raj", email = "21f3002226@ds.study.iitm.ac.in" },
]
description = "Python package description for quiz_api"
readme = "README.md"
requires-python = ">=3.11"
keywords = ["python"]
license = { text = "MIT" }
classifiers = ["Programming Language :: Python :: 3"]
dependencies = [
    'importlib-metadata; python_version>="3.11"',
    "sqlalchemy",
    # 'flask',
    "flask>=2.0.0,<3.0.0",
    "werkzeug>=2.0.0,<3.0.0",
    'flask-sqlalchemy',
    "pydantic[email]>=2.5.3",
    "flask-pydantic>=0.12.0",
    "flask-jwt-extended>=4.7.1",
    "python-dotenv>=1.0.1",
    "flask-cors>=5.0.0",
    "gunicorn>=23.0.0",
]
dynamic = ["version"]

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]
release = ["build", "twine"]
static-code-qa = [
    "pre-commit",
    "pylint",
    "black",
    "isort",
    "flake8",
    "flake8-docstrings",
    "Flake8-pyproject",
    "radon",
]
dev = ["quiz_api[test,release,static-code-qa]"]

# docs: https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata
[tool.setuptools.dynamic]
version = { file = "version.txt" }

[build-system]
# Minimum requirements for the build system to execute.
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]

# [tool.black]
# line-length = 119
# exclude = ".venv"

# [tool.flake8]
# docstring-convention = "all"
# ignore = [
#     "D107",
#     "D212",
#     "E501",
#     "W503",
#     "W605",
#     "D203",
#     "D100",
#     "D101",
#     "D",
#     "R701",
# ]
# exclude = [".venv"]
# max-line-length = 119

# # radon
# radon-max-cc = 10

# [tool.isort]
# profile = "black"
# multi_line_output = "VERTICAL_HANGING_INDENT"
# force_grid_wrap = 2
# line_length = 119

# [tool.pylint."messages control"]
# disable = [
#     "line-too-long",
#     "trailing-whitespace",
#     "missing-function-docstring",
#     "missing-class-docstring",
#     "consider-using-f-string",
#     "import-error",
#     "too-few-public-methods",
#     "redefined-outer-name",
#     "missing-class-docstring",
#     "unused-argument",
#     "raise-missing-from",
#     "missing-module-docstring",
#     "R0801",

# ]

# [tool.ruff.lint]
# # Enable flake8-bugbear (`B`) rules.
# select = ["E", "F", "B", "ERA"]

# # Never enforce `E501` (line length violations).
# ignore = ["E501", "F401", "ERA001", "B904"]

# # Avoid trying to fix flake8-bugbear (`B`) violations.
# unfixable = ["B"]

# [tool.ruff.lint.per-file-ignores]
# "__init__.py" = ["E402"]
# "**/{tests,docs,tools}/*" = ["E402"]
